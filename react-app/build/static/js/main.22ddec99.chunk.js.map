{"version":3,"sources":["resources/north-west-gate.jpg","resources/north-east-gate.jpg","resources/north-gate.jpg","resources/west-gate.jpg","resources/central-gate.jpg","resources/east-gate.jpg","resources/south-west-gate.jpg","resources/south-gate.jpg","resources/south-east-gate.jpg","resources/full-map.jpg","Logger.js","components/BaseMap.js","components/MapLayer.js","components/Login.js","components/BaldursGateMaps.js","Storage.js","components/FreeDraw.js","components/UploadFileButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logger","instance","this","componentName","constructor","name","args","splice","console","log","apply","error","BaseMap","props","alt","src","onLoad","e","onImageLoad","target","MapLayer","logger","r1","r2","density","overlay","baseMapImage","onMouseMove","bind","onMouseDown","onMouseUp","getDataImage","restoreFog","sendImage","showMap","contextFog","canvasFog","getContext","addEventListener","canvasDom","rect","getBoundingClientRect","left","top","touches","clientX","clientY","x","y","getTouchPos","event","MouseEvent","width","height","fillStyle","fillRect","globalCompositeOperation","restoreCanvas","document","createElement","restoreContext","drawImage","image","onSendImage","preventDefault","isRemoveFog","pX","pY","getMapRadialGradient","radGrd","createRadialGradient","addColorStop","isShowAllMap","canvasPrint","contextPrint","toDataURL","initContextMap","className","ref","actions","onClick","id","Component","Login","state","username","password","onSubmit","logout","fetch","method","headers","body","JSON","stringify","then","response","status","text","data","type","onLoginSuccess","onLogoutSuccess","user","placeholder","value","onChange","setState","BaldursGateMaps","fullMap","list","northWestGate","northGate","northEastGate","westGate","centralGate","eastGate","southWestGate","southGate","southEastGate","map","item","index","key","onMapSelected","Storage","contains","parse","store","getItem","setItem","removeItem","hasOwnProperty","sessionStorage","FreeDraw","isDrawEnabled","prevX","currX","prevY","currY","color","lineWidth","drawMode","setColor","resetCanvas","canvas","window","innerWidth","innerHeight","offsetLeft","offsetTop","colorChooserOffsetHeight","colorChooser","offsetHeight","canvasContext","parseInt","beginPath","strokeStyle","Number","moveTo","lineTo","lineJoin","lineCap","stroke","selected","UploadFileButton","onChangeFile","input","click","file","files","title","prompt","fileReader","FileReader","onload","result","readAsDataURL","children","App","sourceImage","sourceAlt","remote","users","masterTool","socket","io","connect","setSourceImage","uploadImage","on","find","emit","save","remove","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.22ddec99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/north-west-gate.1fb9d39e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/north-east-gate.54300b9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/north-gate.a2e473f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/west-gate.7e955c33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/central-gate.f33b04f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/east-gate.7b6ef059.jpg\";","module.exports = __webpack_public_path__ + \"static/media/south-west-gate.ff6decff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/south-gate.25ae3350.jpg\";","module.exports = __webpack_public_path__ + \"static/media/south-east-gate.04dfecff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/full-map.a7fcd8c7.jpg\";","export default class Logger {\n\n\tconstructor(instance) {\n\t\tthis.componentName = typeof instance === \"string\" ? instance : instance.constructor.name;\n\t}\n\n\tlog(...args) {\n\t\targs.splice(0, 0, \"-\");\n\t\targs.splice(0, 0, this.componentName);\n\t\tconsole.log.apply(console, args)\n\t};\n\n\terror(...args) {\n\t\targs.splice(0, 0, \"-\");\n\t\targs.splice(0, 0, this.componentName);\n\t\tconsole.error.apply(console, args)\n\t}\n}\n","import React from \"react\";\n\nconst BaseMap = props => <img alt={props.alt} src={props.src} onLoad={e => props.onImageLoad(e.target)}/>;\n\nexport default BaseMap;\n","import React, {Component} from \"react\";\nimport Logger from \"../Logger\";\nimport BaseMap from \"./BaseMap\";\nimport \"./MapLayer.css\";\n\nexport default class MapLayer extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.logger = new Logger(\"MapLayer\");\n\t\tthis.r1 = 30;\n\t\tthis.r2 = 100;\n\t\tthis.density = .4;\n\t\tthis.overlay = 'rgba( 0, 0, 0, 1 )';\n\t\tthis.baseMapImage = null;\n\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\n\t\tthis.onMouseDown = this.onMouseDown.bind(this);\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\n\t\tthis.getDataImage = this.getDataImage.bind(this);\n\t\tthis.onImageLoad = this.onImageLoad.bind(this);\n\t\tthis.restoreFog = this.restoreFog.bind(this);\n\t\tthis.sendImage = this.sendImage.bind(this);\n\t\tthis.showMap = this.showMap.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.contextFog = this.canvasFog.getContext(\"2d\");\n\t\tlet mousePos;\n\n\t\tthis.canvasFog.addEventListener(\"touchstart\", e => {\n\t\t\tmousePos = getTouchPos(this.canvasFog, e);\n\t\t\tconst {clientX, clientY} = e.touches[0];\n\t\t\tconst event = new MouseEvent(\"mousedown\", {clientX, clientY});\n\t\t\tthis.onMouseDown(event);\n\t\t}, false);\n\n\t\tthis.canvasFog.addEventListener(\"touchend\", e => {\n\t\t\tconst event = new MouseEvent(\"mouseup\", {});\n\t\t\tthis.onMouseUp(event);\n\t\t}, false);\n\n\t\tthis.canvasFog.addEventListener(\"touchmove\", e => {\n\t\t\tconst {clientX, clientY} = e.touches[0];\n\t\t\tconst event = new MouseEvent(\"mousemove\", {clientX, clientY});\n\t\t\tthis.onMouseMove(event);\n\t\t}, false);\n\n\t\tfunction getTouchPos(canvasDom, e) {\n\t\t\tconst rect = canvasDom.getBoundingClientRect();\n\t\t\tconst {left, top} = rect;\n\t\t\tconst {clientX, clientY} = e.touches[0];\n\t\t\treturn {\n\t\t\t\tx: clientX - left,\n\t\t\t\ty: clientY - top\n\t\t\t};\n\t\t}\n\t}\n\n\tinitContextMap() {\n\t\tconst {width, height} = this.canvasFog;\n\t\tthis.logger.log(\"Initializing Fog...\", width, height);\n\t\t// black out the canvas\n\t\tthis.contextFog.fillStyle = this.overlay;\n\t\tthis.contextFog.fillRect(0, 0, width, height);\n\t\t// set up our \"eraser\"\n\t\tthis.contextFog.globalCompositeOperation = 'destination-out';\n\n\t\tthis.restoreCanvas = document.createElement(\"canvas\");\n\t\tthis.restoreCanvas.width = width;\n\t\tthis.restoreCanvas.height = height;\n\t\tthis.restoreContext = this.restoreCanvas.getContext(\"2d\");\n\t\tthis.restoreContext.drawImage(this.canvasFog, 0, 0);\n\t}\n\n\trestoreFog() {\n\t\tthis.contextFog.globalCompositeOperation = \"source-over\";\n\t\tthis.contextFog.drawImage(this.restoreCanvas, 0, 0);\n\t\tthis.contextFog.globalCompositeOperation = \"destination-out\";\n\t}\n\n\tsendImage() {\n\t\tconst image = this.getDataImage();\n\t\tthis.props.onSendImage && this.props.onSendImage(image);\n\t}\n\n\tshowMap() {\n\t\tconst {width, height} = this.canvasFog;\n\t\tthis.contextFog.fillStyle = this.overlay;\n\t\tthis.contextFog.fillRect(0, 0, width, height);\n\t};\n\n\tonMouseDown(e) {\n\t\te.preventDefault();\n\t\tthis.isRemoveFog = true;\n\t}\n\n\tonMouseUp(e) {\n\t\te.preventDefault();\n\t\tthis.isRemoveFog = false;\n\t}\n\n\tonMouseMove(e) {\n\t\te.preventDefault();\n\t\tif (this.isRemoveFog) {\n\t\t\tconst pX = e.clientX, pY = e.clientY - this.r2;\n\t\t\t// reveal wherever we drag\n\t\t\tthis.contextFog.fillStyle = this.getMapRadialGradient(pX, pY);\n\t\t\tthis.contextFog.fillRect(pX - this.r2, pY - this.r2, this.r2 * 2, this.r2 * 2);\n\t\t}\n\t}\n\n\tgetMapRadialGradient(pX, pY) {\n\t\tconst radGrd = this.contextFog.createRadialGradient(pX, pY, this.r1, pX, pY, this.r2);\n\t\tradGrd.addColorStop(0, 'rgba( 0, 0, 0,  1 )');\n\t\tradGrd.addColorStop(this.density, 'rgba( 0, 0, 0, .1 )');\n\t\tradGrd.addColorStop(1, 'rgba( 0, 0, 0,  0 )');\n\t\treturn radGrd;\n\t}\n\n\tgetDataImage(isShowAllMap) {\n\t\tconst canvasPrint = document.createElement(\"canvas\");\n\t\tcanvasPrint.width = this.canvasFog.width;\n\t\tcanvasPrint.height = this.canvasFog.height;\n\t\tconst contextPrint = canvasPrint.getContext(\"2d\");\n\t\tcontextPrint.drawImage(this.baseMapImage, 0, 0, this.baseMapImage.width, this.baseMapImage.height, 0, 0, this.canvasFog.width, this.canvasFog.height);\n\t\tif (!isShowAllMap) {\n\t\t\tcontextPrint.drawImage(this.canvasFog, 0, 0);\n\t\t}\n\t\tthis.restoreContext.drawImage(canvasPrint, 0, 0);\n\t\treturn canvasPrint.toDataURL('image/png');\n\t}\n\n\tonImageLoad(image) {\n\t\tthis.baseMapImage = image;\n\t\tconst {width, height} = image;\n\t\tthis.canvasFog.width = width;\n\t\tthis.canvasFog.height = height;\n\t\tthis.initContextMap();\n\t}\n\n\trender() {\n\t\tconst {image, alt} = this.props;\n\t\treturn (\n\t\t\t<div className={\"map-layer\"}>\n\t\t\t\t<div className={\"actions\"} ref={ref => this.actions = ref}>\n\t\t\t\t\t<span>{alt}</span>\n\t\t\t\t\t<button onClick={this.restoreFog}>Cancel</button>\n\t\t\t\t\t<button onClick={this.sendImage}>Send</button>\n\t\t\t\t\t<button onClick={this.showMap}>Show Map</button>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"map-container\"}>\n\t\t\t\t\t<BaseMap alt={alt} src={image} onImageLoad={this.onImageLoad}/>\n\t\t\t\t\t<canvas id={\"canvas-fog\"} ref={ref => this.canvasFog = ref} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onMouseMove={this.onMouseMove}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {Component} from \"react\";\nimport Logger from \"../Logger\";\nimport \"./Login.css\";\n\nexport default class Login extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.logger = new Logger(\"Login\");\n\t\tthis.state = {\n\t\t\tusername: \"\",\n\t\t\tpassword: \"\"\n\t\t};\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t\tthis.logout = this.logout.bind(this);\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.logger.log(\"Submitting login...\", this.state);\n\t\tfetch('/login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(this.state)\n\t\t}).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\treturn response.text()\n\t\t\t}\n\t\t\treturn \"\"\n\t\t}).then(data => {\n\t\t\tdata = {type: data, id: this.state.username};\n\t\t\tthis.logger.log(data);\n\t\t\tthis.props.onLoginSuccess && this.props.onLoginSuccess(data);\n\t\t});\n\t}\n\n\tlogout(e) {\n\t\tthis.logger.log(\"Logging out\");\n\t\tthis.props.onLogoutSuccess && this.props.onLogoutSuccess()\n\t}\n\n\trender() {\n\t\tconst {username, password} = this.state;\n\t\tconst {user} = this.props;\n\t\tif (user) {\n\t\t\treturn (\n\t\t\t\t<div className={\"component-login user-login\"}>\n\t\t\t\t\t<button onClick={this.logout}>Logout</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className={\"component-login user-logout\"}>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input placeholder={\"Username\"} value={username} onChange={e => this.setState({username: e.target.value})}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input placeholder={\"Password\"} value={password} onChange={e => this.setState({password: e.target.value})}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type={\"submit\"} value={\"Login\"}/>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {Component} from \"react\";\nimport northWestGate from \"../resources/north-west-gate.jpg\";\nimport northEastGate from \"../resources/north-east-gate.jpg\";\nimport northGate from \"../resources/north-gate.jpg\";\nimport westGate from \"../resources/west-gate.jpg\";\nimport centralGate from \"../resources/central-gate.jpg\";\nimport eastGate from \"../resources/east-gate.jpg\";\nimport southWestGate from \"../resources/south-west-gate.jpg\";\nimport southGate from \"../resources/south-gate.jpg\";\nimport southEastGate from \"../resources/south-east-gate.jpg\";\nimport fullMap from \"../resources/full-map.jpg\";\nimport \"./BaldursGateMaps.css\";\n\nexport default class BaldursGateMaps extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.fullMap = {alt: \"Full Map\", src: fullMap};\n\t\tthis.list = [\n\t\t\t{alt: \"North West Gate\", src: northWestGate},\n\t\t\t{alt: \"North Gate\", src: northGate},\n\t\t\t{alt: \"North Est Gate\", src: northEastGate},\n\t\t\t{alt: \"West Gate\", src: westGate},\n\t\t\t{alt: \"Central Gate\", src: centralGate},\n\t\t\t{alt: \"Est Gate\", src: eastGate},\n\t\t\t{alt: \"South West Gate\", src: southWestGate},\n\t\t\t{alt: \"South Gate\", src: southGate},\n\t\t\t{alt: \"South East Gate\", src: southEastGate}\n\t\t];\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"map-list\"}>\n\t\t\t\t<ul>\n\t\t\t\t\t{this.list.map((item, index) =>\n\t\t\t\t\t\t<li key={index} onClick={() => this.props.onMapSelected(item)}>\n\t\t\t\t\t\t\t<img id={`map-${index}`} alt={item.alt} src={item.src}/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t\t<img alt={this.fullMap.alt} src={this.fullMap.src}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","export default class Storage {\n\n\tstatic store = sessionStorage;\n\n\n\tstatic set storage(target) {\n\t\tthis.store = target;\n\t}\n\n\tstatic get storage() {\n\t\treturn this.store;\n\t}\n\n\tstatic getItem(key) {\n\t\tif (!this.contains(key)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn JSON.parse(this.store.getItem(key))\n\t}\n\n\tstatic save(key, value) {\n\t\tthis.store.setItem(key, JSON.stringify(value))\n\t}\n\n\tstatic remove(key) {\n\t\tthis.store.removeItem(key)\n\t}\n\n\tstatic contains(key) {\n\t\treturn this.store.hasOwnProperty(key)\n\t}\n}\n","import React, {Component} from \"react\";\nimport \"./FreeDraw.css\";\n\nexport default class FreeDraw extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.isDrawEnabled = false;\n\t\tthis.prevX = 0;\n\t\tthis.currX = 0;\n\t\tthis.prevY = 0;\n\t\tthis.currY = 0;\n\t\tthis.color = \"black\";\n\t\tthis.lineWidth = 10;\n\t\tthis.drawMode = \"draw\";\n\t\tthis.setColor = this.setColor.bind(this);\n\t\tthis.resetCanvas = this.resetCanvas.bind(this);\n\t\tthis.sendImage = this.sendImage.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\n\t\tthis.canvas.width = window.innerWidth - 20;\n\t\tthis.canvas.height = window.innerHeight - 100;\n\n\t\tconst {offsetLeft, offsetTop} = this.canvas;\n\t\tconst colorChooserOffsetHeight = this.colorChooser.offsetHeight;\n\n\t\tthis.canvasContext = this.canvas.getContext(\"2d\");\n\n\t\tthis.canvas.addEventListener(\"mousemove\", e => {\n\t\t\tthis.currX = parseInt(e.clientX - offsetLeft);\n\t\t\tthis.currY = parseInt(e.clientY - offsetTop - colorChooserOffsetHeight);\n\t\t\tif (this.isDrawEnabled) {\n\t\t\t\tthis.canvasContext.beginPath();\n\t\t\t\tif (this.drawMode === 'draw') {\n\t\t\t\t\tthis.canvasContext.globalCompositeOperation = 'source-over';\n\t\t\t\t\tthis.canvasContext.strokeStyle = this.color;\n\t\t\t\t\tthis.canvasContext.lineWidth = this.lineWidth;\n\t\t\t\t} else {\n\t\t\t\t\tthis.canvasContext.globalCompositeOperation = 'destination-out';\n\t\t\t\t\tthis.canvasContext.lineWidth = Number(this.lineWidth) * 3;\n\t\t\t\t}\n\t\t\t\tthis.canvasContext.moveTo(this.prevX, this.prevY);\n\t\t\t\tthis.canvasContext.lineTo(this.currX, this.currY);\n\t\t\t\tthis.canvasContext.lineJoin = this.canvasContext.lineCap = 'round';\n\t\t\t\tthis.canvasContext.stroke();\n\t\t\t\tthis.prevX = this.currX;\n\t\t\t\tthis.prevY = this.currY;\n\t\t\t}\n\t\t}, false);\n\t\tthis.canvas.addEventListener(\"mousedown\", e => {\n\t\t\tconst {offsetLeft, offsetTop} = this.canvas;\n\t\t\tthis.prevX = this.currX = parseInt(e.clientX - offsetLeft);\n\t\t\tthis.prevY = this.currY = parseInt(e.clientY - offsetTop - colorChooserOffsetHeight);\n\t\t\tthis.isDrawEnabled = true;\n\t\t}, false);\n\t\tthis.canvas.addEventListener(\"mouseup\", e => {\n\t\t\tthis.isDrawEnabled = false;\n\t\t}, false);\n\t\tthis.canvas.addEventListener(\"mouseout\", e => {\n\t\t\tthis.isDrawEnabled = false;\n\t\t}, false);\n\t}\n\n\tsetColor(e) {\n\t\tthis.drawMode = \"draw\";\n\t\tconst {className} = e.target;\n\t\tswitch (className) {\n\t\t\tcase \"green\":\n\t\t\t\tthis.color = \"green\";\n\t\t\t\tbreak;\n\t\t\tcase \"blue\":\n\t\t\t\tthis.color = \"blue\";\n\t\t\t\tbreak;\n\t\t\tcase \"red\":\n\t\t\t\tthis.color = \"red\";\n\t\t\t\tbreak;\n\t\t\tcase \"yellow\":\n\t\t\t\tthis.color = \"yellow\";\n\t\t\t\tbreak;\n\t\t\tcase \"orange\":\n\t\t\t\tthis.color = \"orange\";\n\t\t\t\tbreak;\n\t\t\tcase \"white\":\n\t\t\t\tthis.color = \"white\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.color = \"black\";\n\t\t}\n\t}\n\n\tresetCanvas() {\n\t\tconst {width, height} = this.canvas;\n\t\tthis.canvasContext.fillStyle = \"white\";\n\t\tthis.canvasContext.fillRect(0, 0, width, height);\n\t\tthis.canvasContext.globalCompositeOperation = 'source-over';\n\t}\n\n\tgetDataImage() {\n\t\tconst canvasPrint = document.createElement(\"canvas\");\n\t\tcanvasPrint.width = this.canvas.width;\n\t\tcanvasPrint.height = this.canvas.height;\n\t\tconst contextPrint = canvasPrint.getContext(\"2d\");\n\t\tcontextPrint.drawImage(this.canvas, 0, 0);\n\t\treturn canvasPrint.toDataURL('image/png');\n\t}\n\n\tsendImage() {\n\t\tconst image = this.getDataImage();\n\t\tthis.props.onSendImage && this.props.onSendImage(image);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"free-draw\"}>\n\t\t\t\t<div className={\"color-chooser\"} ref={ref => this.colorChooser = ref}>\n\t\t\t\t\t<button className={\"green\"} onClick={this.setColor}>Green</button>\n\t\t\t\t\t<button className={\"blue\"} onClick={this.setColor}>Blue</button>\n\t\t\t\t\t<button className={\"red\"} onClick={this.setColor}>Red</button>\n\t\t\t\t\t<button className={\"yellow\"} onClick={this.setColor}>Yellow</button>\n\t\t\t\t\t<button className={\"orange\"} onClick={this.setColor}>Orange</button>\n\t\t\t\t\t<button className={\"black\"} onClick={this.setColor}>Black</button>\n\t\t\t\t\t<button className={\"white\"} onClick={this.setColor}>White</button>\n\t\t\t\t\t<button className={\"eraser\"} onClick={() => this.drawMode = \"eraser\"}>Eraser</button>\n\t\t\t\t\t<select onChange={e => this.lineWidth = e.target.value}>\n\t\t\t\t\t\t<option value={\"2\"}>2</option>\n\t\t\t\t\t\t<option value={\"10\"} selected={true}>10</option>\n\t\t\t\t\t\t<option value={\"20\"}>20</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<button className={\"clear\"} onClick={this.resetCanvas}>Reset</button>\n\t\t\t\t\t<button className={\"send\"} onClick={this.sendImage}>Send</button>\n\t\t\t\t</div>\n\t\t\t\t<canvas ref={ref => this.canvas = ref}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {Component} from \"react\";\nimport \"./UploadFileButton.css\";\n\nexport default class UploadFileButton extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onClick = this.onClick.bind(this);\n\t\tthis.onChangeFile = this.onChangeFile.bind(this);\n\t}\n\n\tonClick() {\n\t\tthis.input.click();\n\t}\n\n\tonChangeFile(e) {\n\t\tconst file = e.target.files[0];\n\t\tconst title = window.prompt(\"Set image title\");\n\t\t// FileReader support\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = () => {\n\t\t\tthis.props.onChange && this.props.onChange({\n\t\t\t\tsrc: fileReader.result,\n\t\t\t\talt: title\n\t\t\t});\n\t\t};\n\t\tfileReader.readAsDataURL(file);\n\t}\n\n\trender() {\n\t\tconst {children} = this.props;\n\t\treturn (\n\t\t\t<button className={\"upload-file\"} onClick={this.onClick}>\n\t\t\t\t<span>{children}</span>\n\t\t\t\t<input ref={ref => this.input = ref} type={\"file\"} onChange={this.onChangeFile}/>\n\t\t\t</button>\n\t\t)\n\t}\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport MapLayer from \"./components/MapLayer\";\nimport io from 'socket.io-client';\nimport Login from \"./components/Login\";\nimport Logger from \"./Logger\";\nimport BaldursGateMaps from \"./components/BaldursGateMaps\";\nimport Storage from \"./Storage\";\nimport Spinner from \"./components/Spinner\";\nimport FreeDraw from \"./components/FreeDraw\";\nimport UploadFileButton from \"./components/UploadFileButton\";\n\nexport default class App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.logger = new Logger(\"App\");\n\t\tthis.state = {\n\t\t\tsourceImage: null,\n\t\t\tsourceAlt: null,\n\t\t\timage: null,\n\t\t\tremote: null,\n\t\t\tuser: Storage.getItem(\"user\"),\n\t\t\tusers: [],\n\t\t\tmasterTool: null\n\t\t};\n\t\tthis.socket = io.connect();\n\t\tthis.onLoginSuccess = this.onLoginSuccess.bind(this);\n\t\tthis.onLogoutSuccess = this.onLogoutSuccess.bind(this);\n\t\tthis.setSourceImage = this.setSourceImage.bind(this);\n\t\tthis.uploadImage = this.uploadImage.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.socket.on(\"image\", data => {\n\t\t\tthis.logger.log(\"Received remote image from user\", data.user);\n\t\t\tconst {users} = this.state;\n\t\t\tusers.find(user => user.id === data.user.id).image = data.image;\n\t\t\tthis.setState({users});\n\t\t\t// this.setState({remoteImage: data.image, remoteUser: data.user})\n\t\t});\n\t\tthis.socket.on(\"join\", users => {\n\t\t\tthis.logger.log(\"New user joined the room\", users);\n\t\t\tthis.setState({users});\n\t\t});\n\t\tthis.socket.on(\"leave\", users => {\n\t\t\tthis.logger.log(\"An user left the room\", users);\n\t\t\tthis.setState({users});\n\t\t});\n\t\tif (this.state.user) {\n\t\t\tthis.socket.emit(\"login\", this.state.user);\n\t\t}\n\t}\n\n\t/**\n\t * onLoginSuccess\n\t * @param user: {type: \"master|player\", id: \"[username]\"}\n\t */\n\tonLoginSuccess(user) {\n\t\tStorage.save(\"user\", user);\n\t\tthis.socket.emit(\"login\", user);\n\t\tthis.setState({user});\n\t}\n\n\tonLogoutSuccess() {\n\t\tStorage.remove(\"user\");\n\t\tthis.socket.emit(\"logout\", this.state.user);\n\t\tthis.setState({user: null})\n\t}\n\n\tsetSourceImage(image) {\n\t\tthis.setState({sourceImage: image.src, sourceAlt: image.alt})\n\t}\n\n\tuploadImage(image) {\n\t\tthis.logger.log(\"Uploading image...\");\n\t\tthis.socket.emit(\"upload\", {\n\t\t\timage: image,\n\t\t\tuser: this.state.user\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {sourceImage, sourceAlt, user, users, masterTool} = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Login user={user} onLoginSuccess={this.onLoginSuccess} onLogoutSuccess={this.onLogoutSuccess}/>\n\t\t\t\t{(user && user.type === \"master\") ?\n\t\t\t\t\t<div className={\"master-tools\"}>\n\t\t\t\t\t\t<button onClick={() => this.setState({masterTool: \"baldursFateMaps\"})}>Baldur's Gate</button>\n\t\t\t\t\t\t<button onClick={() => this.setState({masterTool: \"freeDraw\", sourceImage: null})}>Free Draw</button>\n\t\t\t\t\t\t<UploadFileButton onChange={this.setSourceImage}>Upload</UploadFileButton>\n\t\t\t\t\t\t{sourceImage ? <MapLayer image={sourceImage} alt={sourceAlt} onSendImage={this.uploadImage}/> : null}\n\t\t\t\t\t\t{masterTool === \"baldursFateMaps\" ? <BaldursGateMaps onMapSelected={this.setSourceImage}/> : null}\n\t\t\t\t\t\t{masterTool === \"freeDraw\" ? <FreeDraw onSendImage={this.uploadImage}/> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t: null}\n\t\t\t\t{(user && user.type === \"player\") ?\n\t\t\t\t\t<div className={\"player-tools\"}>\n\t\t\t\t\t\t<FreeDraw onSendImage={this.uploadImage}/>\n\t\t\t\t\t\t{/*{remoteImage && remoteUser.type === \"master\" ? <img alt={\"Loading map...\"} src={remoteImage}/> : <Spinner/>}*/}\n\t\t\t\t\t</div>\n\t\t\t\t\t: null}\n\t\t\t\t{users.map(user => user.image ?\n\t\t\t\t\t<div className={`section-${user.id}`}>\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<legend>{user.id}</legend>\n\t\t\t\t\t\t\t<img alt={\"User image\"} src={user.image}/>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}