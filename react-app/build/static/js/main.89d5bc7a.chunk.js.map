{"version":3,"sources":["resources/north-west-gate.jpg","resources/north-east-gate.jpg","resources/north-gate.jpg","resources/west-gate.jpg","resources/central-gate.jpg","resources/east-gate.jpg","resources/south-west-gate.jpg","resources/south-gate.jpg","resources/south-east-gate.jpg","Logger.js","components/BaseMap.js","components/MapLayer.js","components/Login.js","components/MapList.js","Storage.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logger","instance","this","componentName","constructor","name","args","splice","console","log","apply","error","BaseMap","props","alt","src","onLoad","e","onImageLoad","target","MapLayer","logger","r1","r2","density","overlay","baseMapImage","onMouseMove","bind","onMouseDown","onMouseUp","getDataImage","contextFog","canvasFog","getContext","addEventListener","canvasDom","touchEvent","rect","getBoundingClientRect","x","touches","clientX","left","y","clientY","top","getTouchPos","touch","event","MouseEvent","width","height","fillStyle","fillRect","globalCompositeOperation","preventDefault","isRemoveFog","image","socket","emit","canvasPrint","document","createElement","contextPrint","drawImage","toDataURL","pX","pageX","pY","pageY","getMapRadialGradient","radGrd","createRadialGradient","addColorStop","initContextMap","className","id","ref","Component","Login","state","username","password","onSubmit","logout","fetch","method","headers","body","JSON","stringify","then","response","status","text","data","onLoginSuccess","onLogoutSuccess","auth","onClick","placeholder","value","onChange","setState","type","MapList","list","northWestGate","northGate","northEastGate","eastGate","centralGate","westGate","southWestGate","southGate","southEastGate","map","item","index","key","onMapSelected","Storage","store","getItem","setItem","removeItem","hasOwnProperty","sessionStorage","Spinner","d","App","sourceImage","remote","io","connect","on","remoteImage","save","remove","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.89d5bc7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/north-west-gate.1fb9d39e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/north-east-gate.54300b9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/north-gate.a2e473f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/west-gate.7e955c33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/central-gate.f33b04f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/east-gate.7b6ef059.jpg\";","module.exports = __webpack_public_path__ + \"static/media/south-west-gate.7e955c33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/south-gate.25ae3350.jpg\";","module.exports = __webpack_public_path__ + \"static/media/south-east-gate.04dfecff.jpg\";","export default class Logger {\n\n\tconstructor(instance) {\n\t\tthis.componentName = typeof instance === \"string\" ? instance : instance.constructor.name;\n\t}\n\n\tlog(...args) {\n\t\targs.splice(0, 0, \"-\");\n\t\targs.splice(0, 0, this.componentName);\n\t\tconsole.log.apply(console, args)\n\t};\n\n\terror(...args) {\n\t\targs.splice(0, 0, \"-\");\n\t\targs.splice(0, 0, this.componentName);\n\t\tconsole.error.apply(console, args)\n\t}\n}\n","import React from \"react\";\n\nconst BaseMap = props => <img alt={props.alt} src={props.src} onLoad={e => props.onImageLoad(e.target)}/>;\n\nexport default BaseMap;\n","import React, {Component} from \"react\";\nimport Logger from \"../Logger\";\nimport BaseMap from \"./BaseMap\";\n\nexport default class MapLayer extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.logger = new Logger(\"MapLayer\");\n\t\tthis.r1 = 50;\n\t\tthis.r2 = 150;\n\t\tthis.density = .4;\n\t\tthis.overlay = 'rgba( 0, 0, 0, 1 )';\n\t\tthis.baseMapImage = null;\n\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\n\t\tthis.onMouseDown = this.onMouseDown.bind(this);\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\n\t\tthis.getDataImage = this.getDataImage.bind(this);\n\t\tthis.onImageLoad = this.onImageLoad.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.contextFog = this.canvasFog.getContext(\"2d\");\n\t\tlet mousePos;\n\t\tthis.canvasFog.addEventListener(\"touchstart\", e => {\n\t\t\tmousePos = getTouchPos(this.canvasFog, e);\n\t\t\tconst touch = e.touches[0];\n\t\t\tconst event = new MouseEvent(\"mousedown\", {\n\t\t\t\tclientX: touch.clientX,\n\t\t\t\tclientY: touch.clientY\n\t\t\t});\n\t\t\tthis.onMouseDown(event)\n\t\t}, false);\n\t\tthis.canvasFog.addEventListener(\"touchend\", e => {\n\t\t\tconst event = new MouseEvent(\"mouseup\", {});\n\t\t\tthis.onMouseUp(event);\n\t\t}, false);\n\t\tthis.canvasFog.addEventListener(\"touchmove\",  e => {\n\t\t\tconst touch = e.touches[0];\n\t\t\tconst event = new MouseEvent(\"mousemove\", {\n\t\t\t\tclientX: touch.clientX,\n\t\t\t\tclientY: touch.clientY\n\t\t\t});\n\t\t\tthis.onMouseMove(event)\n\t\t}, false);\n\n\t\tfunction getTouchPos(canvasDom, touchEvent) {\n\t\t\tconst rect = canvasDom.getBoundingClientRect();\n\t\t\treturn {\n\t\t\t\tx: touchEvent.touches[0].clientX - rect.left,\n\t\t\t\ty: touchEvent.touches[0].clientY - rect.top\n\t\t\t};\n\t\t}\n\t}\n\n\tinitContextMap() {\n\t\tconst {width, height} = this.canvasFog;\n\t\tthis.logger.log(\"Initializing Fog...\", width, height);\n\t\t// black out the canvas\n\t\tthis.contextFog.fillStyle = this.overlay;\n\t\tthis.contextFog.fillRect(0, 0, width, height);\n\t\t// set up our \"eraser\"\n\t\tthis.contextFog.globalCompositeOperation = 'destination-out';\n\t}\n\n\tonMouseDown(e) {\n\t\te.preventDefault();\n\t\tthis.isRemoveFog = true\n\t}\n\n\tonMouseUp(e) {\n\t\te.preventDefault();\n\t\tthis.isRemoveFog = false;\n\t\tconst image = this.getDataImage();\n\t\tthis.logger.log(image);\n\t\tthis.props.socket.emit(\"upload\", image);\n\t}\n\n\tgetDataImage() {\n\t\tconst canvasPrint = document.createElement(\"canvas\");\n\t\tcanvasPrint.width = this.canvasFog.width;\n\t\tcanvasPrint.height = this.canvasFog.height;\n\t\tconst contextPrint = canvasPrint.getContext(\"2d\");\n\t\tcontextPrint.drawImage(this.baseMapImage, 0, 0);\n\t\tcontextPrint.drawImage(this.canvasFog, 0, 0);\n\t\treturn canvasPrint.toDataURL('image/png');\n\t}\n\n\tonMouseMove(e) {\n\t\te.preventDefault();\n\t\tif (this.isRemoveFog) {\n\t\t\t// ev2 && (ev = ev2);\n\n\t\t\tconst pX = e.pageX\n\t\t\t\t, pY = e.pageY;\n\n\t\t\t// reveal wherever we drag\n\t\t\tthis.contextFog.fillStyle = this.getMapRadialGradient(pX, pY);\n\t\t\tthis.contextFog.fillRect(pX - this.r2, pY - this.r2, this.r2 * 2, this.r2 * 2);\n\t\t}\n\t}\n\n\tgetMapRadialGradient(pX, pY) {\n\t\tlet radGrd = this.contextFog.createRadialGradient(pX, pY, this.r1, pX, pY, this.r2);\n\t\tradGrd.addColorStop(0, 'rgba( 0, 0, 0,  1 )');\n\t\tradGrd.addColorStop(this.density, 'rgba( 0, 0, 0, .1 )');\n\t\tradGrd.addColorStop(1, 'rgba( 0, 0, 0,  0 )');\n\t\treturn radGrd;\n\t}\n\n\tonImageLoad(image) {\n\t\tthis.baseMapImage = image;\n\t\tconst {width, height} = image;\n\t\tthis.canvasFog.width = width;\n\t\tthis.canvasFog.height = height;\n\t\tthis.initContextMap();\n\t}\n\n\trender() {\n\t\tconst {image} = this.props;\n\t\treturn (\n\t\t\t<div className={\"map\"}>\n\t\t\t\t<BaseMap alt={\"Baldur's Gate\"} src={image} onImageLoad={this.onImageLoad}/>\n\t\t\t\t<canvas id={\"canvas-fog\"} ref={ref => this.canvasFog = ref} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onMouseMove={this.onMouseMove}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {Component} from \"react\";\nimport Logger from \"../Logger\";\n\nexport default class Login extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.logger = new Logger(\"Login\");\n\t\tthis.state = {\n\t\t\tusername: \"\",\n\t\t\tpassword: \"\"\n\t\t};\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t\tthis.logout = this.logout.bind(this);\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.logger.log(\"Submitting login...\", this.state);\n\t\tfetch('/login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(this.state)\n\t\t}).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\treturn response.text()\n\t\t\t}\n\t\t\treturn \"\"\n\t\t}).then(data => {\n\t\t\tthis.logger.log(data);\n\t\t\tthis.props.onLoginSuccess && this.props.onLoginSuccess(data);\n\t\t});\n\t}\n\n\tlogout(e) {\n\t\tthis.logger.log(\"Logging out\");\n\t\tthis.props.onLogoutSuccess && this.props.onLogoutSuccess()\n\t}\n\n\trender() {\n\t\tconst {username, password} = this.state;\n\t\tconst {auth} = this.props;\n\t\tif (auth) {\n\t\t\treturn (\n\t\t\t\t<div className={\"component-login user-login\"}>\n\t\t\t\t\t<button onClick={this.logout}>Logout</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className={\"component-login user-logout\"}>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input placeholder={\"Username\"} value={username} onChange={e => this.setState({username: e.target.value})}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input placeholder={\"Password\"} value={password} onChange={e => this.setState({password: e.target.value})}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type={\"submit\"} value={\"Login\"}/>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {Component} from \"react\";\nimport northWestGate from \"../resources/north-west-gate.jpg\";\nimport northEastGate from \"../resources/north-east-gate.jpg\";\nimport northGate from \"../resources/north-gate.jpg\";\nimport westGate from \"../resources/west-gate.jpg\";\nimport centralGate from \"../resources/central-gate.jpg\";\nimport eastGate from \"../resources/east-gate.jpg\";\nimport southWestGate from \"../resources/south-west-gate.jpg\";\nimport southGate from \"../resources/south-gate.jpg\";\nimport southEastGate from \"../resources/south-east-gate.jpg\";\n\nexport default class MapList extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.list = [\n\t\t\t{alt: \"North West Gate\", src: northWestGate},\n\t\t\t{alt: \"North Gate\", src: northGate},\n\t\t\t{alt: \"North Est Gate\", src: northEastGate},\n\t\t\t{alt: \"Est Gate\", src: eastGate},\n\t\t\t{alt: \"Central Gate\", src: centralGate},\n\t\t\t{alt: \"West Gate\", src: westGate},\n\t\t\t{alt: \"South West Gate\", src: southWestGate},\n\t\t\t{alt: \"South Gate\", src: southGate},\n\t\t\t{alt: \"South East Gate\", src: southEastGate}\n\t\t];\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{this.list.map((item, index) =>\n\t\t\t\t\t<li key={index} onClick={() => this.props.onMapSelected(item)}>\n\t\t\t\t\t\t<img id={`map-${index}`} alt={item.alt} src={item.src}/>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t)\n\t}\n}\n","export default class Storage {\n\n\tstatic store = sessionStorage;\n\n\n\tstatic set storage(target) {\n\t\tthis.store = target;\n\t}\n\n\tstatic get storage() {\n\t\treturn this.store;\n\t}\n\n\tstatic getItem(key) {\n\t\treturn this.store.getItem(key)\n\t}\n\n\tstatic save(key, value) {\n\t\tthis.store.setItem(key, value)\n\t}\n\n\tstatic remove(key) {\n\t\tthis.store.removeItem(key)\n\t}\n\n\tstatic contains(key) {\n\t\treturn this.store.hasOwnProperty(key)\n\t}\n}\n","import React from \"react\";\nimport \"./fire-camp.css\";\n\nconst Spinner = () =>\n\t<div className={\"spinner\"}>\n\t\t{/*<div className=\"cssload-loader\">*/}\n\t\t{/*\t<div className=\"cssload-inner cssload-one\"></div>*/}\n\t\t{/*\t<div className=\"cssload-inner cssload-two\"></div>*/}\n\t\t{/*\t<div className=\"cssload-inner cssload-three\"></div>*/}\n\t\t{/*</div>*/}\n\t\t<div className=\"container\">\n\t\t\t<div className=\"campfire-wrapper\">\n\t\t\t\t<div className=\"tree-container-back\">\n\t\t\t\t\t<div className=\"tree-8\"></div>\n\t\t\t\t\t<div className=\"tree-9\"></div>\n\t\t\t\t\t<div className=\"tree-10\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"rock-container\">\n\t\t\t\t\t<div className=\"rock-big\"></div>\n\t\t\t\t\t<div className=\"rock-small\">\n\t\t\t\t\t\t<div className=\"rock-1\"></div>\n\t\t\t\t\t\t<div className=\"rock-2\"></div>\n\t\t\t\t\t\t<div className=\"rock-3\"></div>\n\t\t\t\t\t\t<div className=\"rock-4\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"smoke-container\">\n\t\t\t\t\t<svg>\n\t\t\t\t\t\t<path d=\"M 150 0 Q 200 100 100 250 C 0 450 120 400 50 600  \"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<div className=\"fire-container\">\n\n\t\t\t\t\t\t<div className=\"flame-1\"></div>\n\t\t\t\t\t\t<div className=\"flame-2\"></div>\n\t\t\t\t\t\t<div className=\"flame-3\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"tree-container-front\">\n\t\t\t\t\t<div className=\"tree-1\"></div>\n\t\t\t\t\t<div className=\"tree-2\"></div>\n\t\t\t\t\t<div className=\"tree-3\"></div>\n\t\t\t\t\t<div className=\"tree-4\"></div>\n\t\t\t\t\t<div className=\"tree-5\"></div>\n\t\t\t\t\t<div className=\"tree-6\"></div>\n\t\t\t\t\t<div className=\"tree-7\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div> ;\n\nexport default Spinner;\n","import React, {Component} from 'react';\nimport './App.css';\nimport MapLayer from \"./components/MapLayer\";\nimport io from 'socket.io-client';\nimport Login from \"./components/Login\";\nimport Logger from \"./Logger\";\nimport MapList from \"./components/MapList\";\nimport Storage from \"./Storage\";\nimport Spinner from \"./components/Spinner\";\n\nexport default class App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.logger = new Logger(\"App\");\n\t\tthis.state = {\n\t\t\tsourceImage: null,\n\t\t\timage: null,\n\t\t\tremote: null,\n\t\t\tauth: Storage.getItem(\"auth\")\n\t\t};\n\t\tthis.socket = io.connect();\n\t\tthis.onLoginSuccess = this.onLoginSuccess.bind(this);\n\t\tthis.onLogoutSuccess = this.onLogoutSuccess.bind(this);\n\t\tthis.onMapSelected = this.onMapSelected.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.socket.on(\"image\", data => {\n\t\t\tthis.logger.log(\"Received event 'image'\", data);\n\t\t\tthis.setState({remoteImage: data})\n\t\t});\n\t}\n\n\tonLoginSuccess(data) {\n\t\tStorage.save(\"auth\", data);\n\t\tthis.setState({auth: data})\n\t}\n\n\tonLogoutSuccess() {\n\t\tStorage.remove(\"auth\");\n\t\tthis.setState({auth: null})\n\t}\n\n\tonMapSelected(map) {\n\t\tthis.setState({sourceImage: map.src})\n\t}\n\n\trender() {\n\t\tconst {sourceImage, remoteImage, auth} = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Login auth={auth} onLoginSuccess={this.onLoginSuccess} onLogoutSuccess={this.onLogoutSuccess}/>\n\t\t\t\t{auth === \"master\" ?\n\t\t\t\t\t<div className={\"master-tools\"}>\n\t\t\t\t\t\t{sourceImage ? <MapLayer image={sourceImage} socket={this.socket}/> : null}\n\t\t\t\t\t\t<MapList  onMapSelected={this.onMapSelected}/>\n\t\t\t\t\t</div> : null}\n\t\t\t\t{auth === \"player\" ? remoteImage ? <img alt={\"Loading map...\"} src={remoteImage}/> : <Spinner/> : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}